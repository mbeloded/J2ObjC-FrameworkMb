//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/frameworks/base/core/java/android/text/SpanWatcher.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("AndroidTextSpanWatcher_INCLUDE_ALL")
#ifdef AndroidTextSpanWatcher_RESTRICT
#define AndroidTextSpanWatcher_INCLUDE_ALL 0
#else
#define AndroidTextSpanWatcher_INCLUDE_ALL 1
#endif
#undef AndroidTextSpanWatcher_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (AndroidTextSpanWatcher_) && (AndroidTextSpanWatcher_INCLUDE_ALL || defined(AndroidTextSpanWatcher_INCLUDE))
#define AndroidTextSpanWatcher_

#define AndroidTextNoCopySpan_RESTRICT 1
#define AndroidTextNoCopySpan_INCLUDE 1
#include "../../android/text/NoCopySpan.h"

@protocol AndroidTextSpannable;

/*!
 @brief When an object of this type is attached to a Spannable, its methods
 will be called to notify it that other markup objects have been
 added, changed, or removed.
 */
@protocol AndroidTextSpanWatcher < AndroidTextNoCopySpan, NSObject, JavaObject >

/*!
 @brief This method is called to notify you that the specified object
 has been attached to the specified range of the text.
 */
- (void)onSpanAddedWithAndroidTextSpannable:(id<AndroidTextSpannable>)text
                                     withId:(id)what
                                    withInt:(jint)start
                                    withInt:(jint)end;

/*!
 @brief This method is called to notify you that the specified object
 has been detached from the specified range of the text.
 */
- (void)onSpanRemovedWithAndroidTextSpannable:(id<AndroidTextSpannable>)text
                                       withId:(id)what
                                      withInt:(jint)start
                                      withInt:(jint)end;

/*!
 @brief This method is called to notify you that the specified object
 has been relocated from the range <code>ostart&hellip;oend</code>
 to the new range <code>nstart&hellip;nend</code> of the text.
 */
- (void)onSpanChangedWithAndroidTextSpannable:(id<AndroidTextSpannable>)text
                                       withId:(id)what
                                      withInt:(jint)ostart
                                      withInt:(jint)oend
                                      withInt:(jint)nstart
                                      withInt:(jint)nend;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidTextSpanWatcher)

J2OBJC_TYPE_LITERAL_HEADER(AndroidTextSpanWatcher)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("AndroidTextSpanWatcher_INCLUDE_ALL")
