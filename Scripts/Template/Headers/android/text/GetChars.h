//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/frameworks/base/core/java/android/text/GetChars.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("AndroidTextGetChars_INCLUDE_ALL")
#ifdef AndroidTextGetChars_RESTRICT
#define AndroidTextGetChars_INCLUDE_ALL 0
#else
#define AndroidTextGetChars_INCLUDE_ALL 1
#endif
#undef AndroidTextGetChars_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (AndroidTextGetChars_) && (AndroidTextGetChars_INCLUDE_ALL || defined(AndroidTextGetChars_INCLUDE))
#define AndroidTextGetChars_

#define JavaLangCharSequence_RESTRICT 1
#define JavaLangCharSequence_INCLUDE 1
#include "../../java/lang/CharSequence.h"

@class IOSCharArray;

/*!
 @brief Please implement this interface if your CharSequence has a
 getChars() method like the one in String that is faster than
 calling charAt() multiple times.
 */
@protocol AndroidTextGetChars < JavaLangCharSequence, NSObject, JavaObject >

/*!
 @brief Exactly like String.getChars(): copy chars <code>start</code>
 through <code>end - 1</code> from this CharSequence into <code>dest</code>
 beginning at offset <code>destoff</code>.
 */
- (void)getCharsWithInt:(jint)start
                withInt:(jint)end
          withCharArray:(IOSCharArray *)dest
                withInt:(jint)destoff;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidTextGetChars)

J2OBJC_TYPE_LITERAL_HEADER(AndroidTextGetChars)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("AndroidTextGetChars_INCLUDE_ALL")
