//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/frameworks/base/core/java/android/util/Base64DataException.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("AndroidUtilBase64DataException_INCLUDE_ALL")
#ifdef AndroidUtilBase64DataException_RESTRICT
#define AndroidUtilBase64DataException_INCLUDE_ALL 0
#else
#define AndroidUtilBase64DataException_INCLUDE_ALL 1
#endif
#undef AndroidUtilBase64DataException_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (AndroidUtilBase64DataException_) && (AndroidUtilBase64DataException_INCLUDE_ALL || defined(AndroidUtilBase64DataException_INCLUDE))
#define AndroidUtilBase64DataException_

#define JavaIoIOException_RESTRICT 1
#define JavaIoIOException_INCLUDE 1
#include "../../java/io/IOException.h"

/*!
 @brief This exception is thrown by <code>Base64InputStream</code> or <code>Base64OutputStream</code>
 when an error is detected in the data being decoded.
 This allows problems with the base64 data
 to be disambiguated from errors in the underlying streams (e.g. actual connection errors.)
 */
@interface AndroidUtilBase64DataException : JavaIoIOException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)detailMessage;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidUtilBase64DataException)

FOUNDATION_EXPORT void AndroidUtilBase64DataException_initWithNSString_(AndroidUtilBase64DataException *self, NSString *detailMessage);

FOUNDATION_EXPORT AndroidUtilBase64DataException *new_AndroidUtilBase64DataException_initWithNSString_(NSString *detailMessage) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(AndroidUtilBase64DataException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("AndroidUtilBase64DataException_INCLUDE_ALL")
