//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/javax/net/ssl/SSLHandshakeException.java
//

#include "../../../J2ObjC_header.h"

#pragma push_macro("JavaxNetSslSSLHandshakeException_INCLUDE_ALL")
#ifdef JavaxNetSslSSLHandshakeException_RESTRICT
#define JavaxNetSslSSLHandshakeException_INCLUDE_ALL 0
#else
#define JavaxNetSslSSLHandshakeException_INCLUDE_ALL 1
#endif
#undef JavaxNetSslSSLHandshakeException_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaxNetSslSSLHandshakeException_) && (JavaxNetSslSSLHandshakeException_INCLUDE_ALL || defined(JavaxNetSslSSLHandshakeException_INCLUDE))
#define JavaxNetSslSSLHandshakeException_

#define JavaxNetSslSSLException_RESTRICT 1
#define JavaxNetSslSSLException_INCLUDE 1
#include "../../../javax/net/ssl/SSLException.h"

@class JavaLangThrowable;

/*!
 @brief The exception that is thrown when a handshake could not be completed
 successfully.
 */
@interface JavaxNetSslSSLHandshakeException : JavaxNetSslSSLException

#pragma mark Public

/*!
 @brief Constructs a new instance with the given detail message.
 */
- (instancetype)initWithNSString:(NSString *)reason;

/*!
 @brief Constructs a new instance with given detail message and cause.
  internal use only
 */
- (instancetype)initWithNSString:(NSString *)reason
           withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Constructs a new instance with given cause.
  internal use only
 */
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNetSslSSLHandshakeException)

FOUNDATION_EXPORT void JavaxNetSslSSLHandshakeException_initWithNSString_(JavaxNetSslSSLHandshakeException *self, NSString *reason);

FOUNDATION_EXPORT JavaxNetSslSSLHandshakeException *new_JavaxNetSslSSLHandshakeException_initWithNSString_(NSString *reason) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaxNetSslSSLHandshakeException_initWithJavaLangThrowable_(JavaxNetSslSSLHandshakeException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaxNetSslSSLHandshakeException *new_JavaxNetSslSSLHandshakeException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaxNetSslSSLHandshakeException_initWithNSString_withJavaLangThrowable_(JavaxNetSslSSLHandshakeException *self, NSString *reason, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaxNetSslSSLHandshakeException *new_JavaxNetSslSSLHandshakeException_initWithNSString_withJavaLangThrowable_(NSString *reason, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaxNetSslSSLHandshakeException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaxNetSslSSLHandshakeException_INCLUDE_ALL")
