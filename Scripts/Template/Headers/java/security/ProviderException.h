//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/security/ProviderException.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("JavaSecurityProviderException_INCLUDE_ALL")
#ifdef JavaSecurityProviderException_RESTRICT
#define JavaSecurityProviderException_INCLUDE_ALL 0
#else
#define JavaSecurityProviderException_INCLUDE_ALL 1
#endif
#undef JavaSecurityProviderException_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaSecurityProviderException_) && (JavaSecurityProviderException_INCLUDE_ALL || defined(JavaSecurityProviderException_INCLUDE))
#define JavaSecurityProviderException_

#define JavaLangRuntimeException_RESTRICT 1
#define JavaLangRuntimeException_INCLUDE 1
#include "../../java/lang/RuntimeException.h"

@class JavaLangThrowable;

/*!
 @brief <code>ProviderException</code> is a general exception, thrown by security <code>Providers</code>
 .
 - seealso: Provider
 */
@interface JavaSecurityProviderException : JavaLangRuntimeException

#pragma mark Public

/*!
 @brief Constructs a new instance of <code>ProviderException</code>.
 */
- (instancetype)init;

/*!
 @brief Constructs a new instance of <code>ProviderException</code> with the given
 message.
 @param msg
 the detail message for this exception.
 */
- (instancetype)initWithNSString:(NSString *)msg;

/*!
 @brief Constructs a new instance of <code>ProviderException</code> with the given
 message and the cause.
 @param message
 the detail message for this exception.
 @param cause
 the exception which is the cause for this exception.
 */
- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Constructs a new instance of <code>ProviderException</code> with the cause.
 @param cause
 the exception which is the cause for this exception.
 */
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityProviderException)

FOUNDATION_EXPORT void JavaSecurityProviderException_initWithNSString_(JavaSecurityProviderException *self, NSString *msg);

FOUNDATION_EXPORT JavaSecurityProviderException *new_JavaSecurityProviderException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaSecurityProviderException_init(JavaSecurityProviderException *self);

FOUNDATION_EXPORT JavaSecurityProviderException *new_JavaSecurityProviderException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaSecurityProviderException_initWithNSString_withJavaLangThrowable_(JavaSecurityProviderException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaSecurityProviderException *new_JavaSecurityProviderException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaSecurityProviderException_initWithJavaLangThrowable_(JavaSecurityProviderException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaSecurityProviderException *new_JavaSecurityProviderException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityProviderException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaSecurityProviderException_INCLUDE_ALL")
