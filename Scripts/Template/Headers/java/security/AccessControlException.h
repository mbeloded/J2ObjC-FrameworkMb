//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/security/AccessControlException.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("JavaSecurityAccessControlException_INCLUDE_ALL")
#ifdef JavaSecurityAccessControlException_RESTRICT
#define JavaSecurityAccessControlException_INCLUDE_ALL 0
#else
#define JavaSecurityAccessControlException_INCLUDE_ALL 1
#endif
#undef JavaSecurityAccessControlException_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaSecurityAccessControlException_) && (JavaSecurityAccessControlException_INCLUDE_ALL || defined(JavaSecurityAccessControlException_INCLUDE))
#define JavaSecurityAccessControlException_

#define JavaLangSecurityException_RESTRICT 1
#define JavaLangSecurityException_INCLUDE 1
#include "../../java/lang/SecurityException.h"

@class JavaSecurityPermission;

/*!
 @brief <code>AccessControlException</code> is thrown if the access control infrastructure
 denies protected access due to missing permissions.
 */
@interface JavaSecurityAccessControlException : JavaLangSecurityException

#pragma mark Public

/*!
 @brief Constructs a new instance of <code>AccessControlException</code> with the
 given message.
 @param message
 the detail message for this exception.
 */
- (instancetype)initWithNSString:(NSString *)message;

/*!
 @brief Constructs a new instance of <code>AccessControlException</code> with the
 given message and the requested <code>Permission</code> which was not granted.
 @param message
 the detail message for the exception.
 @param perm
 the requested <code>Permission</code> which was not granted.
 */
- (instancetype)initWithNSString:(NSString *)message
      withJavaSecurityPermission:(JavaSecurityPermission *)perm;

/*!
 @brief Returns the requested permission that caused this Exception or <code>null</code>
  if there is no corresponding <code>Permission</code>.
 @return the requested permission that caused this Exception, maybe <code>null</code>.
 */
- (JavaSecurityPermission *)getPermission;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityAccessControlException)

FOUNDATION_EXPORT void JavaSecurityAccessControlException_initWithNSString_(JavaSecurityAccessControlException *self, NSString *message);

FOUNDATION_EXPORT JavaSecurityAccessControlException *new_JavaSecurityAccessControlException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaSecurityAccessControlException_initWithNSString_withJavaSecurityPermission_(JavaSecurityAccessControlException *self, NSString *message, JavaSecurityPermission *perm);

FOUNDATION_EXPORT JavaSecurityAccessControlException *new_JavaSecurityAccessControlException_initWithNSString_withJavaSecurityPermission_(NSString *message, JavaSecurityPermission *perm) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityAccessControlException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaSecurityAccessControlException_INCLUDE_ALL")
