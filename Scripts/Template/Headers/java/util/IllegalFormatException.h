//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/IllegalFormatException.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("JavaUtilIllegalFormatException_INCLUDE_ALL")
#ifdef JavaUtilIllegalFormatException_RESTRICT
#define JavaUtilIllegalFormatException_INCLUDE_ALL 0
#else
#define JavaUtilIllegalFormatException_INCLUDE_ALL 1
#endif
#undef JavaUtilIllegalFormatException_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaUtilIllegalFormatException_) && (JavaUtilIllegalFormatException_INCLUDE_ALL || defined(JavaUtilIllegalFormatException_INCLUDE))
#define JavaUtilIllegalFormatException_

#define JavaLangIllegalArgumentException_RESTRICT 1
#define JavaLangIllegalArgumentException_INCLUDE 1
#include "../../java/lang/IllegalArgumentException.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "../../java/io/Serializable.h"

/*!
 @brief An <code>IllegalFormatException</code> is thrown when a format string that
 contains either an illegal syntax or format specifier is transferred as a
 parameter.
 Only subclasses inheriting explicitly from this exception are
 allowed to be instantiated.
 - seealso: java.lang.RuntimeException
 */
@interface JavaUtilIllegalFormatException : JavaLangIllegalArgumentException < JavaIoSerializable >

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilIllegalFormatException)

FOUNDATION_EXPORT void JavaUtilIllegalFormatException_init(JavaUtilIllegalFormatException *self);

FOUNDATION_EXPORT JavaUtilIllegalFormatException *new_JavaUtilIllegalFormatException_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilIllegalFormatException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaUtilIllegalFormatException_INCLUDE_ALL")
