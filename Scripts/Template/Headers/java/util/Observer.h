//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/Observer.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("JavaUtilObserver_INCLUDE_ALL")
#ifdef JavaUtilObserver_RESTRICT
#define JavaUtilObserver_INCLUDE_ALL 0
#else
#define JavaUtilObserver_INCLUDE_ALL 1
#endif
#undef JavaUtilObserver_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaUtilObserver_) && (JavaUtilObserver_INCLUDE_ALL || defined(JavaUtilObserver_INCLUDE))
#define JavaUtilObserver_

@class JavaUtilObservable;

/*!
 @brief <code>Observer</code> is the interface to be implemented by objects that
 receive notification of updates on an <code>Observable</code> object.
 - seealso: Observable
 */
@protocol JavaUtilObserver < NSObject, JavaObject >

/*!
 @brief This method is called if the specified <code>Observable</code> object's
 <code>notifyObservers</code> method is called (because the <code>Observable</code>
 object has been updated.
 @param observable
 the <code>Observable</code> object.
 @param data
 the data passed to <code>Observable.notifyObservers(Object)</code>.
 */
- (void)updateWithJavaUtilObservable:(JavaUtilObservable *)observable
                              withId:(id)data;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilObserver)

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilObserver)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaUtilObserver_INCLUDE_ALL")
