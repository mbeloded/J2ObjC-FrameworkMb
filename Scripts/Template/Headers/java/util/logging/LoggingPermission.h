//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/logging/LoggingPermission.java
//

#include "../../../J2ObjC_header.h"

#pragma push_macro("JavaUtilLoggingLoggingPermission_INCLUDE_ALL")
#ifdef JavaUtilLoggingLoggingPermission_RESTRICT
#define JavaUtilLoggingLoggingPermission_INCLUDE_ALL 0
#else
#define JavaUtilLoggingLoggingPermission_INCLUDE_ALL 1
#endif
#undef JavaUtilLoggingLoggingPermission_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaUtilLoggingLoggingPermission_) && (JavaUtilLoggingLoggingPermission_INCLUDE_ALL || defined(JavaUtilLoggingLoggingPermission_INCLUDE))
#define JavaUtilLoggingLoggingPermission_

#define JavaSecurityBasicPermission_RESTRICT 1
#define JavaSecurityBasicPermission_INCLUDE 1
#include "../../../java/security/BasicPermission.h"

#define JavaSecurityGuard_RESTRICT 1
#define JavaSecurityGuard_INCLUDE 1
#include "../../../java/security/Guard.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "../../../java/io/Serializable.h"

@class JavaSecurityPermission;

/*!
 @brief Legacy security code; do not use.
 */
@interface JavaUtilLoggingLoggingPermission : JavaSecurityBasicPermission < JavaSecurityGuard, JavaIoSerializable >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)actions;

- (NSString *)getActions;

- (jboolean)impliesWithJavaSecurityPermission:(JavaSecurityPermission *)permission;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilLoggingLoggingPermission)

FOUNDATION_EXPORT void JavaUtilLoggingLoggingPermission_initWithNSString_withNSString_(JavaUtilLoggingLoggingPermission *self, NSString *name, NSString *actions);

FOUNDATION_EXPORT JavaUtilLoggingLoggingPermission *new_JavaUtilLoggingLoggingPermission_initWithNSString_withNSString_(NSString *name, NSString *actions) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilLoggingLoggingPermission)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaUtilLoggingLoggingPermission_INCLUDE_ALL")
