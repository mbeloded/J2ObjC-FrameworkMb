//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/RunnableScheduledFuture.java
//

#include "../../../J2ObjC_header.h"

#pragma push_macro("JavaUtilConcurrentRunnableScheduledFuture_INCLUDE_ALL")
#ifdef JavaUtilConcurrentRunnableScheduledFuture_RESTRICT
#define JavaUtilConcurrentRunnableScheduledFuture_INCLUDE_ALL 0
#else
#define JavaUtilConcurrentRunnableScheduledFuture_INCLUDE_ALL 1
#endif
#undef JavaUtilConcurrentRunnableScheduledFuture_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaUtilConcurrentRunnableScheduledFuture_) && (JavaUtilConcurrentRunnableScheduledFuture_INCLUDE_ALL || defined(JavaUtilConcurrentRunnableScheduledFuture_INCLUDE))
#define JavaUtilConcurrentRunnableScheduledFuture_

#define JavaUtilConcurrentRunnableFuture_RESTRICT 1
#define JavaUtilConcurrentRunnableFuture_INCLUDE 1
#include "../../../java/util/concurrent/RunnableFuture.h"

#define JavaUtilConcurrentScheduledFuture_RESTRICT 1
#define JavaUtilConcurrentScheduledFuture_INCLUDE 1
#include "../../../java/util/concurrent/ScheduledFuture.h"

/*!
 @brief A <code>ScheduledFuture</code> that is <code>Runnable</code>.
 Successful
 execution of the <code>run</code> method causes completion of the
 <code>Future</code> and allows access to its results.
 - seealso: FutureTask
 - seealso: Executor
 @since 1.6
 @author Doug Lea
 */
@protocol JavaUtilConcurrentRunnableScheduledFuture < JavaUtilConcurrentRunnableFuture, JavaUtilConcurrentScheduledFuture, NSObject, JavaObject >

/*!
 @brief Returns true if this is a periodic task.
 A periodic task may
 re-run according to some schedule. A non-periodic task can be
 run only once.
 @return true if this task is periodic
 */
- (jboolean)isPeriodic;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilConcurrentRunnableScheduledFuture)

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentRunnableScheduledFuture)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaUtilConcurrentRunnableScheduledFuture_INCLUDE_ALL")
