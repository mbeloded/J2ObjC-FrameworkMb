//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/channels/ClosedSelectorException.java
//

#include "../../../J2ObjC_header.h"

#pragma push_macro("JavaNioChannelsClosedSelectorException_INCLUDE_ALL")
#ifdef JavaNioChannelsClosedSelectorException_RESTRICT
#define JavaNioChannelsClosedSelectorException_INCLUDE_ALL 0
#else
#define JavaNioChannelsClosedSelectorException_INCLUDE_ALL 1
#endif
#undef JavaNioChannelsClosedSelectorException_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaNioChannelsClosedSelectorException_) && (JavaNioChannelsClosedSelectorException_INCLUDE_ALL || defined(JavaNioChannelsClosedSelectorException_INCLUDE))
#define JavaNioChannelsClosedSelectorException_

#define JavaLangIllegalStateException_RESTRICT 1
#define JavaLangIllegalStateException_INCLUDE 1
#include "../../../java/lang/IllegalStateException.h"

/*!
 @brief A <code>ClosedSelectorException</code> is thrown when a <code>selector</code>
 is closed and an I/O operation is attempted.
 */
@interface JavaNioChannelsClosedSelectorException : JavaLangIllegalStateException

#pragma mark Public

/*!
 @brief Constructs a <code>ClosedSelectorException</code>.
 */
- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioChannelsClosedSelectorException)

FOUNDATION_EXPORT void JavaNioChannelsClosedSelectorException_init(JavaNioChannelsClosedSelectorException *self);

FOUNDATION_EXPORT JavaNioChannelsClosedSelectorException *new_JavaNioChannelsClosedSelectorException_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaNioChannelsClosedSelectorException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaNioChannelsClosedSelectorException_INCLUDE_ALL")
