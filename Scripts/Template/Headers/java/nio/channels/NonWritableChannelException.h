//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/channels/NonWritableChannelException.java
//

#include "../../../J2ObjC_header.h"

#pragma push_macro("JavaNioChannelsNonWritableChannelException_INCLUDE_ALL")
#ifdef JavaNioChannelsNonWritableChannelException_RESTRICT
#define JavaNioChannelsNonWritableChannelException_INCLUDE_ALL 0
#else
#define JavaNioChannelsNonWritableChannelException_INCLUDE_ALL 1
#endif
#undef JavaNioChannelsNonWritableChannelException_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaNioChannelsNonWritableChannelException_) && (JavaNioChannelsNonWritableChannelException_INCLUDE_ALL || defined(JavaNioChannelsNonWritableChannelException_INCLUDE))
#define JavaNioChannelsNonWritableChannelException_

#define JavaLangIllegalStateException_RESTRICT 1
#define JavaLangIllegalStateException_INCLUDE 1
#include "../../../java/lang/IllegalStateException.h"

/*!
 @brief A <code>NonWritableChannelException</code> is thrown when attempting to write to a
 channel that is not open for writing.
 */
@interface JavaNioChannelsNonWritableChannelException : JavaLangIllegalStateException

#pragma mark Public

/*!
 @brief Constructs a <code>NonWritableChannelException</code>.
 */
- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioChannelsNonWritableChannelException)

FOUNDATION_EXPORT void JavaNioChannelsNonWritableChannelException_init(JavaNioChannelsNonWritableChannelException *self);

FOUNDATION_EXPORT JavaNioChannelsNonWritableChannelException *new_JavaNioChannelsNonWritableChannelException_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaNioChannelsNonWritableChannelException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaNioChannelsNonWritableChannelException_INCLUDE_ALL")
