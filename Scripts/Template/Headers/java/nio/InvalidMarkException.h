//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/InvalidMarkException.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("JavaNioInvalidMarkException_INCLUDE_ALL")
#ifdef JavaNioInvalidMarkException_RESTRICT
#define JavaNioInvalidMarkException_INCLUDE_ALL 0
#else
#define JavaNioInvalidMarkException_INCLUDE_ALL 1
#endif
#undef JavaNioInvalidMarkException_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaNioInvalidMarkException_) && (JavaNioInvalidMarkException_INCLUDE_ALL || defined(JavaNioInvalidMarkException_INCLUDE))
#define JavaNioInvalidMarkException_

#define JavaLangIllegalStateException_RESTRICT 1
#define JavaLangIllegalStateException_INCLUDE 1
#include "../../java/lang/IllegalStateException.h"

/*!
 @brief An <code>InvalidMarkException</code> is thrown when <code>reset()</code> is called on a
 buffer, but no mark has been set previously.
 */
@interface JavaNioInvalidMarkException : JavaLangIllegalStateException

#pragma mark Public

/*!
 @brief Constructs an <code>InvalidMarkException</code>.
 */
- (instancetype)init;

/*!
 @brief Constructs an <code>InvalidMarkException</code> with the given detail message.
 */
- (instancetype)initWithNSString:(NSString *)detailMessage;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioInvalidMarkException)

FOUNDATION_EXPORT void JavaNioInvalidMarkException_init(JavaNioInvalidMarkException *self);

FOUNDATION_EXPORT JavaNioInvalidMarkException *new_JavaNioInvalidMarkException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaNioInvalidMarkException_initWithNSString_(JavaNioInvalidMarkException *self, NSString *detailMessage);

FOUNDATION_EXPORT JavaNioInvalidMarkException *new_JavaNioInvalidMarkException_initWithNSString_(NSString *detailMessage) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaNioInvalidMarkException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaNioInvalidMarkException_INCLUDE_ALL")
