//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/io/Externalizable.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("JavaIoExternalizable_INCLUDE_ALL")
#ifdef JavaIoExternalizable_RESTRICT
#define JavaIoExternalizable_INCLUDE_ALL 0
#else
#define JavaIoExternalizable_INCLUDE_ALL 1
#endif
#undef JavaIoExternalizable_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaIoExternalizable_) && (JavaIoExternalizable_INCLUDE_ALL || defined(JavaIoExternalizable_INCLUDE))
#define JavaIoExternalizable_

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "../../java/io/Serializable.h"

@protocol JavaIoObjectInput;
@protocol JavaIoObjectOutput;

/*!
 @brief Defines an interface for classes that want to be serializable, but have their
 own binary representation.
 */
@protocol JavaIoExternalizable < JavaIoSerializable, NSObject, JavaObject >

/*!
 @brief Reads the next object from the ObjectInput <code>input</code>.
 @param input
 the ObjectInput from which the next object is read.
 @throws IOException
 if an error occurs attempting to read from <code>input</code>.
 @throws ClassNotFoundException
 if the class of the instance being loaded cannot be found.
 */
- (void)readExternalWithJavaIoObjectInput:(id<JavaIoObjectInput>)input;

/*!
 @brief Writes the receiver to the ObjectOutput <code>output</code>.
 @param output
 the ObjectOutput to write the object to.
 @throws IOException
 if an error occurs attempting to write to <code>output</code>.
 */
- (void)writeExternalWithJavaIoObjectOutput:(id<JavaIoObjectOutput>)output;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoExternalizable)

J2OBJC_TYPE_LITERAL_HEADER(JavaIoExternalizable)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaIoExternalizable_INCLUDE_ALL")
