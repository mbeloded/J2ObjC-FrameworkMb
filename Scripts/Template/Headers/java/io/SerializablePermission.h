//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/io/SerializablePermission.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("JavaIoSerializablePermission_INCLUDE_ALL")
#ifdef JavaIoSerializablePermission_RESTRICT
#define JavaIoSerializablePermission_INCLUDE_ALL 0
#else
#define JavaIoSerializablePermission_INCLUDE_ALL 1
#endif
#undef JavaIoSerializablePermission_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaIoSerializablePermission_) && (JavaIoSerializablePermission_INCLUDE_ALL || defined(JavaIoSerializablePermission_INCLUDE))
#define JavaIoSerializablePermission_

#define JavaSecurityBasicPermission_RESTRICT 1
#define JavaSecurityBasicPermission_INCLUDE 1
#include "../../java/security/BasicPermission.h"

@class JavaSecurityPermission;

/*!
 @brief Legacy security code; do not use.
 */
@interface JavaIoSerializablePermission : JavaSecurityBasicPermission

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)permissionName;

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)actions;

- (NSString *)getActions;

- (jboolean)impliesWithJavaSecurityPermission:(JavaSecurityPermission *)permission;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoSerializablePermission)

FOUNDATION_EXPORT void JavaIoSerializablePermission_initWithNSString_(JavaIoSerializablePermission *self, NSString *permissionName);

FOUNDATION_EXPORT JavaIoSerializablePermission *new_JavaIoSerializablePermission_initWithNSString_(NSString *permissionName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaIoSerializablePermission_initWithNSString_withNSString_(JavaIoSerializablePermission *self, NSString *name, NSString *actions);

FOUNDATION_EXPORT JavaIoSerializablePermission *new_JavaIoSerializablePermission_initWithNSString_withNSString_(NSString *name, NSString *actions) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaIoSerializablePermission)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaIoSerializablePermission_INCLUDE_ALL")
