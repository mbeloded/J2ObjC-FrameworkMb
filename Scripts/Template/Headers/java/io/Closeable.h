//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/io/Closeable.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("JavaIoCloseable_INCLUDE_ALL")
#ifdef JavaIoCloseable_RESTRICT
#define JavaIoCloseable_INCLUDE_ALL 0
#else
#define JavaIoCloseable_INCLUDE_ALL 1
#endif
#undef JavaIoCloseable_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaIoCloseable_) && (JavaIoCloseable_INCLUDE_ALL || defined(JavaIoCloseable_INCLUDE))
#define JavaIoCloseable_

#define JavaLangAutoCloseable_RESTRICT 1
#define JavaLangAutoCloseable_INCLUDE 1
#include "../../java/lang/AutoCloseable.h"

/*!
 @brief An <code>AutoCloseable</code> whose close method may throw an <code>IOException</code>.
 */
@protocol JavaIoCloseable < JavaLangAutoCloseable, NSObject, JavaObject >

/*!
 @brief Closes the object and release any system resources it holds.
 <p>Although only the first call has any effect, it is safe to call close
 multiple times on the same object. This is more lenient than the
 overridden <code>AutoCloseable.close()</code>, which may be called at most
 once.
 */
- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoCloseable)

J2OBJC_TYPE_LITERAL_HEADER(JavaIoCloseable)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaIoCloseable_INCLUDE_ALL")
