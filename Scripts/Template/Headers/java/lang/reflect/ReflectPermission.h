//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/reflect/ReflectPermission.java
//

#include "../../../J2ObjC_header.h"

#pragma push_macro("JavaLangReflectReflectPermission_INCLUDE_ALL")
#ifdef JavaLangReflectReflectPermission_RESTRICT
#define JavaLangReflectReflectPermission_INCLUDE_ALL 0
#else
#define JavaLangReflectReflectPermission_INCLUDE_ALL 1
#endif
#undef JavaLangReflectReflectPermission_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaLangReflectReflectPermission_) && (JavaLangReflectReflectPermission_INCLUDE_ALL || defined(JavaLangReflectReflectPermission_INCLUDE))
#define JavaLangReflectReflectPermission_

#define JavaSecurityBasicPermission_RESTRICT 1
#define JavaSecurityBasicPermission_INCLUDE 1
#include "../../../java/security/BasicPermission.h"

@class JavaSecurityPermission;

/*!
 @brief Legacy security code; do not use.
 */
@interface JavaLangReflectReflectPermission : JavaSecurityBasicPermission

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name;

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)actions;

- (NSString *)getActions;

- (jboolean)impliesWithJavaSecurityPermission:(JavaSecurityPermission *)permission;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangReflectReflectPermission)

FOUNDATION_EXPORT void JavaLangReflectReflectPermission_initWithNSString_(JavaLangReflectReflectPermission *self, NSString *name);

FOUNDATION_EXPORT JavaLangReflectReflectPermission *new_JavaLangReflectReflectPermission_initWithNSString_(NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaLangReflectReflectPermission_initWithNSString_withNSString_(JavaLangReflectReflectPermission *self, NSString *name, NSString *actions);

FOUNDATION_EXPORT JavaLangReflectReflectPermission *new_JavaLangReflectReflectPermission_initWithNSString_withNSString_(NSString *name, NSString *actions) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaLangReflectReflectPermission)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaLangReflectReflectPermission_INCLUDE_ALL")
