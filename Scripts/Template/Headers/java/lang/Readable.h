//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/Readable.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("JavaLangReadable_INCLUDE_ALL")
#ifdef JavaLangReadable_RESTRICT
#define JavaLangReadable_INCLUDE_ALL 0
#else
#define JavaLangReadable_INCLUDE_ALL 1
#endif
#undef JavaLangReadable_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaLangReadable_) && (JavaLangReadable_INCLUDE_ALL || defined(JavaLangReadable_INCLUDE))
#define JavaLangReadable_

@class JavaNioCharBuffer;

/*!
 @brief Represents a sequence of characters that can be incrementally read (copied)
 into a <code>CharBuffer</code>.
 */
@protocol JavaLangReadable < NSObject, JavaObject >

/*!
 @brief Reads characters into the specified <code>CharBuffer</code>.
 The maximum
 number of characters read is <code>CharBuffer.remaining()</code>.
 @param cb
 the buffer to be filled with characters read.
 @return the number of characters actually read, or -1 if this
 <code>Readable</code> reaches its end
 @throws IOException
 if an I/O error occurs.
 */
- (jint)readWithJavaNioCharBuffer:(JavaNioCharBuffer *)cb;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangReadable)

J2OBJC_TYPE_LITERAL_HEADER(JavaLangReadable)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaLangReadable_INCLUDE_ALL")
