//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/ReflectiveOperationException.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("JavaLangReflectiveOperationException_INCLUDE_ALL")
#ifdef JavaLangReflectiveOperationException_RESTRICT
#define JavaLangReflectiveOperationException_INCLUDE_ALL 0
#else
#define JavaLangReflectiveOperationException_INCLUDE_ALL 1
#endif
#undef JavaLangReflectiveOperationException_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaLangReflectiveOperationException_) && (JavaLangReflectiveOperationException_INCLUDE_ALL || defined(JavaLangReflectiveOperationException_INCLUDE))
#define JavaLangReflectiveOperationException_

#define JavaLangException_RESTRICT 1
#define JavaLangException_INCLUDE 1
#include "../../java/lang/Exception.h"

@class JavaLangThrowable;

/*!
 @brief Superclass of exceptions related to reflection.
 @since 1.7
 */
@interface JavaLangReflectiveOperationException : JavaLangException

#pragma mark Public

/*!
 @brief Constructs a new exception with no detail message.
 */
- (instancetype)init;

/*!
 @brief Constructs a new exception with the given detail message.
 */
- (instancetype)initWithNSString:(NSString *)message;

/*!
 @brief Constructs a new exception with the given detail message and cause.
 */
- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Constructs a new exception with the given cause.
 */
- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangReflectiveOperationException)

FOUNDATION_EXPORT void JavaLangReflectiveOperationException_init(JavaLangReflectiveOperationException *self);

FOUNDATION_EXPORT JavaLangReflectiveOperationException *new_JavaLangReflectiveOperationException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaLangReflectiveOperationException_initWithNSString_(JavaLangReflectiveOperationException *self, NSString *message);

FOUNDATION_EXPORT JavaLangReflectiveOperationException *new_JavaLangReflectiveOperationException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaLangReflectiveOperationException_initWithJavaLangThrowable_(JavaLangReflectiveOperationException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaLangReflectiveOperationException *new_JavaLangReflectiveOperationException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaLangReflectiveOperationException_initWithNSString_withJavaLangThrowable_(JavaLangReflectiveOperationException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT JavaLangReflectiveOperationException *new_JavaLangReflectiveOperationException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaLangReflectiveOperationException)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaLangReflectiveOperationException_INCLUDE_ALL")
