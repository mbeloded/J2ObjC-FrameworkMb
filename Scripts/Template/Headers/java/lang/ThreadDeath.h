//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/ThreadDeath.java
//

#include "../../J2ObjC_header.h"

#pragma push_macro("JavaLangThreadDeath_INCLUDE_ALL")
#ifdef JavaLangThreadDeath_RESTRICT
#define JavaLangThreadDeath_INCLUDE_ALL 0
#else
#define JavaLangThreadDeath_INCLUDE_ALL 1
#endif
#undef JavaLangThreadDeath_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaLangThreadDeath_) && (JavaLangThreadDeath_INCLUDE_ALL || defined(JavaLangThreadDeath_INCLUDE))
#define JavaLangThreadDeath_

#define JavaLangError_RESTRICT 1
#define JavaLangError_INCLUDE 1
#include "../../java/lang/Error.h"

/*!
 @brief ThreadDeath is thrown when a thread stops executing.
 It is used to aid in the
 orderly unrolling of the thread's stack (eg. cleanup of monitors).
 */
@interface JavaLangThreadDeath : JavaLangError

#pragma mark Public

/*!
 @brief Constructs a new instance of this class.
 Note that in the case of
 ThreadDeath, the stack trace may <em>not</em> be filled in a way which
 allows a stack trace to be printed.
 */
- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangThreadDeath)

FOUNDATION_EXPORT void JavaLangThreadDeath_init(JavaLangThreadDeath *self);

FOUNDATION_EXPORT JavaLangThreadDeath *new_JavaLangThreadDeath_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaLangThreadDeath)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaLangThreadDeath_INCLUDE_ALL")
