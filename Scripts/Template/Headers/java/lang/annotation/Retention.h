//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/annotation/Retention.java
//

#include "../../../J2ObjC_header.h"

#pragma push_macro("JavaLangAnnotationRetention_INCLUDE_ALL")
#ifdef JavaLangAnnotationRetention_RESTRICT
#define JavaLangAnnotationRetention_INCLUDE_ALL 0
#else
#define JavaLangAnnotationRetention_INCLUDE_ALL 1
#endif
#undef JavaLangAnnotationRetention_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaLangAnnotationRetention_) && (JavaLangAnnotationRetention_INCLUDE_ALL || defined(JavaLangAnnotationRetention_INCLUDE))
#define JavaLangAnnotationRetention_

#define JavaLangAnnotationAnnotation_RESTRICT 1
#define JavaLangAnnotationAnnotation_INCLUDE 1
#include "../../../java/lang/annotation/Annotation.h"

@class JavaLangAnnotationRetentionPolicy;

/*!
 @brief Defines a meta-annotation for determining the scope of retention for an
 annotation.
 If the retention annotation is not set <code>RetentionPolicy.CLASS</code>
  is used as default retention.
 @since 1.5
 */
@protocol JavaLangAnnotationRetention < JavaLangAnnotationAnnotation >

@property (readonly) JavaLangAnnotationRetentionPolicy *value;

@end

@interface JavaLangAnnotationRetention : NSObject < JavaLangAnnotationRetention > {
 @private
  JavaLangAnnotationRetentionPolicy *value_;
}

- (instancetype)initWithValue:(JavaLangAnnotationRetentionPolicy *)value__;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangAnnotationRetention)

J2OBJC_TYPE_LITERAL_HEADER(JavaLangAnnotationRetention)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaLangAnnotationRetention_INCLUDE_ALL")
