//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/annotation/RetentionPolicy.java
//

#include "../../../J2ObjC_header.h"

#pragma push_macro("JavaLangAnnotationRetentionPolicy_INCLUDE_ALL")
#ifdef JavaLangAnnotationRetentionPolicy_RESTRICT
#define JavaLangAnnotationRetentionPolicy_INCLUDE_ALL 0
#else
#define JavaLangAnnotationRetentionPolicy_INCLUDE_ALL 1
#endif
#undef JavaLangAnnotationRetentionPolicy_RESTRICT

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (JavaLangAnnotationRetentionPolicy_) && (JavaLangAnnotationRetentionPolicy_INCLUDE_ALL || defined(JavaLangAnnotationRetentionPolicy_INCLUDE))
#define JavaLangAnnotationRetentionPolicy_

#define JavaLangEnum_RESTRICT 1
#define JavaLangEnum_INCLUDE 1
#include "../../../java/lang/Enum.h"

typedef NS_ENUM(NSUInteger, JavaLangAnnotationRetentionPolicy_Enum) {
  JavaLangAnnotationRetentionPolicy_Enum_SOURCE = 0,
  JavaLangAnnotationRetentionPolicy_Enum_CLASS = 1,
  JavaLangAnnotationRetentionPolicy_Enum_RUNTIME = 2,
};

/*!
 @brief Defines an enumeration for annotation retention policies.
 Used in conjunction
 with the <code>Retention</code> annotation to specify an annotation's time-to-live
 in the overall development life cycle.
 @since 1.5
 */
@interface JavaLangAnnotationRetentionPolicy : JavaLangEnum < NSCopying >

+ (JavaLangAnnotationRetentionPolicy *)SOURCE;

+ (JavaLangAnnotationRetentionPolicy *)CLASS;

+ (JavaLangAnnotationRetentionPolicy *)RUNTIME;

#pragma mark Package-Private

+ (IOSObjectArray *)values;

+ (JavaLangAnnotationRetentionPolicy *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;
- (JavaLangAnnotationRetentionPolicy_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(JavaLangAnnotationRetentionPolicy)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT JavaLangAnnotationRetentionPolicy *JavaLangAnnotationRetentionPolicy_values_[];

/*!
 @brief Annotation is only available in the source code.
 */
inline JavaLangAnnotationRetentionPolicy *JavaLangAnnotationRetentionPolicy_get_SOURCE();
J2OBJC_ENUM_CONSTANT(JavaLangAnnotationRetentionPolicy, SOURCE)

/*!
 @brief Annotation is available in the source code and in the class file, but not
 at runtime.
 This is the default policy.
 */
inline JavaLangAnnotationRetentionPolicy *JavaLangAnnotationRetentionPolicy_get_CLASS();
J2OBJC_ENUM_CONSTANT(JavaLangAnnotationRetentionPolicy, CLASS)

/*!
 @brief Annotation is available in the source code, the class file and is
 available at runtime.
 */
inline JavaLangAnnotationRetentionPolicy *JavaLangAnnotationRetentionPolicy_get_RUNTIME();
J2OBJC_ENUM_CONSTANT(JavaLangAnnotationRetentionPolicy, RUNTIME)

FOUNDATION_EXPORT IOSObjectArray *JavaLangAnnotationRetentionPolicy_values();

FOUNDATION_EXPORT JavaLangAnnotationRetentionPolicy *JavaLangAnnotationRetentionPolicy_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT JavaLangAnnotationRetentionPolicy *JavaLangAnnotationRetentionPolicy_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(JavaLangAnnotationRetentionPolicy)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("JavaLangAnnotationRetentionPolicy_INCLUDE_ALL")
